anchor = lambda.t[,1003]
for (i in 1110:1308) {
print(cosine(anchor,lambda.t[,i]))
}
cosines = ()
for (i in 1110:1308) {
cosine = cosine(anchor,lambda.t[,i])
cosines = rbind(cosine)
print cosine
}
cosines = vector()
for (i in 1110:1308) {
cosine = cosine(anchor,lambda.t[,i])
cosines = c(cosines, cosine)
print cosine
}
cosines = vector()
for (i in 1110:1308) {
cosine = cosine(anchor,lambda.t[,i])
#cosines = c(cosines, cosine)
print cosine
}
cosines = vector()
for (i in 1110:1308) {
cosine = cosine(anchor,lambda.t[,i])
#cosines = c(cosines, cosine)
print(cosine)
}
cosines = vector()
for (i in 1110:1308) {
cosine = cosine(anchor,lambda.t[,i])
cosines = c(cosines, cosine)
print(cosine)
}
cosines
write.csv(cosines,file = "/Users/jchan/Desktop/Dropbox/Research/Dissertation/OpenIDEO/Pipeline/Validation/CTM_e-waste_insp-cosines.csv")
library(ggplot2)
file = "/Users/jchan/Desktop/Workbook1.csv"
data = read.csv(file,header=T,sep=",")
data
View(data)
View(data)
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter')
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4)
attach(data)
qplot(cb_1_meansim_immediate)
qplot(cb_1_meansim_immediate,binwidth=0.005)
qplot(cb_1_meansim_immediate,binwidth=0.001)
qplot(cb_1_meansim_immediate,binwidth=0.0005)
qplot(cb_1_meansim_immediate,binwidth=0.0005,log=x)
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate, log=y)) + geom_point(position='jitter',alpha = 0.4)
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate, log=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4)
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4) + scale+y+log10()
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4) + coord_trans(y="log10")
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position=position_jitter(width=.5),alpha = 0.4) + coord_trans(y="log10")
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4) + coord_trans(y="log10")
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position=position_jitter(width=.7),alpha = 0.4) + coord_trans(y="log10")
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4) + coord_trans(y="log10")
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.2) + coord_trans(y="log10")
file = "/Users/jchan/Desktop/Workbook1.csv"
data = read.csv(file,header=T,sep=",")
View(data)
attach(data)
qplot(con_1_meansim_immdiate)
library(ggplot2)
qplot(con_1_meansim_immediate)
ggplot(data, aes(x=shortlist,y=con_1_meansim_immediate, log=y)) + geom_point(position='jitter',alpha = 0.4)
ggplot(data, aes(x=shortlist,y=con_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4)
ggplot(data, aes(x=shortlist,y=con_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4) + geom_smooth(method='lm')
ggplot(data, aes(x=shortlist,y=cb_1_meansim_immediate)) + geom_point(position='jitter',alpha = 0.4) + geom_smooth(method='lm')
ggplot(data, aes(x=cb_1_meansim_immediate,y=shortlist)) + geom_point(position='jitter',alpha = 0.4) + geom_smooth(method='lm')
ggplot(data, aes(x=con_1_meansim_immediate,y=shortlist)) + geom_point(position='jitter',alpha = 0.4) + geom_smooth(method='lm')
ggplot(data, aes(x=con_1_meansim_immediate,y=shortlist)) + geom_point(alpha = 0.4) + geom_smooth(method='lm')
library(glm)
library(lme4)
install.packages("lme4")
library(lme4)
path = "/Users/jchan/Desktop/Dropbox/Coursework/LSAP Advanced Applied Stats/HSBL1_Distribution_Socact_new.sav"
package(foreign)
install.packages(foreign)
install.packages('foreign')
package(foreign)
library(foreign)
hsb_data = read.spss(path)
hsb_data
attach(hsb_data)
fit = lmer(mathach ~ 1 + (1|id), data=hsb_data)
fit = lmer(mathach ~ 1 + (1|schid), data=hsb_data)
summary(hsb_data)
fit = lmer(mathach ~ 1 + (1|Schid), data=hsb_data)
summary(fit)
fit
mean(minority)
mean(hsb_data$minority)
mean(hsb_data$ses)
ses_grandmean = mean(hsb_data$ses)
anova(fit)
summary(fit)
fit.anova
anova(fit,test=Chisq)
anova(fit,test='Chisq')
# lme4 for multilevel, arm for various auxiliary computing and graphing functions
library(lme4)
library(arm)
#load the data
path = "/Users/jchan/Desktop/Dropbox/Research/dissertation/OpenIDEO/Pipeline/Challenge_and_High-level_Data/iPython intermediate inputs and outputs/ConceptLevel_AfterDistanceAndControls_n707.csv"
data = read.csv(path,header=TRUE,sep=',')
attach(data)
fitLRnull = glm(shortlist ~ 1, data=data, family=binomial)
fitLRmean = glm(shortlist ~ insp_dist_z_insp_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
summary(fitLRmean)
scatterplot(insp_dist_z_insp_mean,fitLRmean$residuals)
hist(fitLRmean$residuals)
qqnorm(fitLRmean$residuals)
hist(insp_dist_z_insp_mean)
insp_dist_z_insp_mean_sqrt = sqrt(insp_dist_z_insp_mean)
min(insp_dist_z_insp_mean)
insp_dist_z_insp_mean_sqrt = sqrt(insp_dist_z_insp_mean + abs(min(insp_dist_z_insp_mean)))
hist(insp_dist_z_insp_mean_sqrt)
insp_dist_z_insp_mean_inverse = 1/insp_dist_z_insp_mean
hist(insp_dist_z_insp_mean_inverse)
insp_dist_z_insp_mean_log = log10(insp_dist_z_insp_mean + abs(min(insp_dist_z_insp_mean)))
hist(insp_dist_z_insp_mean_log)
insp_dist_z_insp_mean_log = 0-log10(0 - insp_dist_z_insp_mean + abs(min(insp_dist_z_insp_mean)))
hist(insp_dist_z_insp_mean_log)
insp_dist_z_insp_mean_inverse = 0-(1/(0-insp_dist_z_insp_mean))
hist(insp_dist_z_insp_mean_inverse)
fitLRmeanlog = glm(shortlist ~ insp_dist_z_insp_mean_log + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
summary(fitLRmeanlog)
qqnorm(fitLRmeanlog$residuals)
hist(fitLRmeanlog$residuals)
insp_dist_z_insp_mean_ln = 0-log(0 - insp_dist_z_insp_mean + abs(min(insp_dist_z_insp_mean)))
hist(insp_dist_z_insp_mean_ln)
fitLRmeanln = glm(shortlist ~ insp_dist_z_insp_mean_ln + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
summary(fitLRmeanln)
fitLRmean$deviance-fitLRmean$null.deviance
(fitLRmean$null.deviance-fitLRmean$deviance)/fitLRmean$null.deviance
x = 6^2
x
remove(x)
insp_dist_z_insp_mean_ln_sq = insp_dist_z_insp_mean_ln^2
hist(insp_dist_z_insp_mean_ln_sq)
fitLRmeanln.sq = glm(shortlist ~ insp_dist_z_insp_mean_ln + insp_dist_z_insp_mean_ln_sq + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
summary(fitLRmeanln.sq)
fitLRmean$method
fitLRmean$effects
?glm
data.sd = na.omit(data)
data.sd
tokeep = c('shortlist','insp_dist_z_insp_std')
data.sd = data[tokeep]
data.sd = na.omit(data.sd)
fitLRsd.null = glm(shortlist ~ 1, data=data.sd, family=binomial)
summary(fitLRsd)
summary(fitLRsd.null)
fitLRsd = glm(shortlist ~ insp_dist_z_insp_std + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
nagR2(707,logLik(fitLRsd.null)[1],logLik(fitLRsd)[1]) #Naglkerke R2
1-pchisq(-2*(logLik(fitLRsd.null)[1]-logLik(fitLRsd)[1]),3) #Likelihood ratio
tokeep = c('shortlist','insp_dist_z_insp_std','authorURL','challenge')
data.sd = data[tokeep]
data.sd = na.omit(data.sd)
fitMLsd.author.null = glmer(shortlist ~ 1 + (1|authorURL), data=data.sd, family=binomial)
summary(fitMLsd.author.null)
fitMLsd.chall.null = glmer(shortlist ~ 1 + (1|challenge), data=data.sd, family=binomial)
summary(fitMLsd.chall.null)
deviance(fitMLsd.author.null)
fitMLsd.author = glmer(shortlist ~ 1 + (1|authorURL) insp_dist_z_insp_std + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
fitMLsd.author = glmer(shortlist ~ 1 + (1|authorURL) + insp_dist_z_insp_std + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
summary(fitMLsd.author)
deviance(fitMLsd.author.null)-deviance(fitMLsd.author)
fitMLsd.chall = glmer(shortlist ~ insp_dist_z_insp_std + (insp_dist_z_insp_std|challenge) + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
deviance(fitMLsd.chall.null)-deviance(fitMLsd.chall)
(0.72-0.54)/0.72
concepts = read.csv("/Users/jchan/Desktop/concepts.csv",header=TRUE,sep=',')
library(ggplot2)
ggplot(concepts,aes(concepts)) + geom_histogram()
ggplot(concepts,aes(concepts)) + geom_histogram(fill=NA,color="black") + theme_bw()
ggplot(concepts,aes(concepts)) + geom_histogram(fill=NA,color="black",binwidth=2) + theme_bw()
path = "/Users/jchan/Desktop/Dropbox/Research/dissertation/OpenIDEO/Pipeline/Challenge_and_High-level_Data/iPython intermediate inputs and outputs/ConceptLevel_AfterDistanceAndControlsAndDiversity_n456.csv"
data.div456 = read.csv(path,header=TRUE,sep=',')
pairs(cbind(data.div456$shortlist,data.div456$comments_preshortlist,data.div456$num_shortlisted_sources,data.div456$insp_div_mean),
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+inp_div_mean,data=data.div456),
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+inp_div_mean,data=data.div456,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_div_mean,data=data.div456,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
remove(data.div456)
path = "/Users/jchan/Desktop/Dropbox/Research/Dissertation/OpenIDEO/Pipeline/Challenge_and_High-level_Data/iPython intermediate inputs and outputs/ConceptLevel_AfterDistanceAndControlsAndDiversity_n813.csv"
data.div.full = read.csv(path.header=TRUE,sep=',')
data.div.full = read.csv(path,header=TRUE,sep=',')
data.div.insp <- data.div[data.div$insp_dist_count > 1]
data.div.insp <- data.div.full[data.div.full$insp_dist_count > 1]
summary(data.div.full)
data.div.insp <- data.div.full[data.div.full$insp_dist_count > 1,]
data.div.conc <- data.div.full[data.div.full$concept_dist_count > 1,]
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_div_mean+insp_div_min+insp_div_sd,data=data.div456,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_div_mean+insp_div_min+insp_div_sd,data=data.div.insp,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_div_mean+insp_div_min+insp_div_sd,data=data.div.conc,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_div_mean+insp_div_min+insp_div_sd,data=data.div.conc,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
#lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
summary(glm(shortlist ~ comments_preshortlist + num_shortlisted_sources + concept_div_mean, data=data.div.conc, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + num_shortlisted_sources + concept_div_mean, data=data.div.conc, family=binomial))
library(lme4)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + num_shortlisted_sources + concept_div_mean, data=data.div.conc, family=binomial))
influence.measures(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + num_shortlisted_sources + concept_div_mean, data=data.div.conc, family=binomial))
influence.measures(glm(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + num_shortlisted_sources + concept_div_mean, data=data.div.conc, family=binomial))
influence.measures(glm(shortlist ~ comments_preshortlist + num_shortlisted_sources + concept_div_mean, data=data.div.conc, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + num_shortlisted_sources + concept_div_min, data=data.div.conc, family=binomial))
data.div.conc$concept_div_mean_z = scale(data.div.conc$concept_div_mean,scale=TRUE,center=TRUE)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + num_shortlisted_sources + concept_div_mean_z, data=data.div.conc, family=binomial))
data.div.conc$concept_div_min_z = scale(data.div.conc$concept_div_min,scale=TRUE,center=TRUE)
data.div.conc$feedback_z = scale(data.div.conc$comments_preshortlist,scale=TRUE,center=TRUE)
data.div.conc$sourceshort_z = scale(data.div.conc$num_shortlisted_sources,scale=TRUE,center=TRUE)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + feedback_z + sourceshort_z + concept_div_mean_z, data=data.div.conc, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (concept_div_mean_z|challenge) + feedback_z + sourceshort_z + concept_div_mean_z, data=data.div.conc, family=binomial))
confint.merMod(glmer(shortlist ~ (1|authorURL) + (concept_div_mean_z|challenge) + feedback_z + sourceshort_z + concept_div_mean_z, data=data.div.conc, family=binomial),method='Wald')
library(arm)
library(lme4)
confint(glmer(shortlist ~ (1|authorURL) + (concept_div_mean_z|challenge) + feedback_z + sourceshort_z + concept_div_mean_z, data=data.div.conc, family=binomial),method='Wald')
remove(lme4)
detach("package:lme4",unload=TRUE)
detach("package:arm",unload=TRUE)
detach("package:lme4",unload=TRUE)
install.packages(lme4)
install.packages('lme4')
install.packages("lme4")
install.packages("lme4")
remove.packages("lme4")
install.packages("lme4")
install.packages("lme4")
library(lme4)
remove.packages("lme4")
install.packages("lme4",
repos=c("http://lme4.r-forge.r-project.org/repos",
getOption("repos")[["CRAN"]]))
install.packages("lme4", repos = c("http://lme4.r-forge.r-project.org/repos",
)
install.packages("lme4", repos = c("http://lme4.r-forge.r-project.org/repos", getOption("repos")[["CRAN"]]))
remove.packages("lme4")
install.packages("~/Desktop/lme4_1.0-6.tgz", repos = NULL)
confint.merMod(glmer(shortlist ~ (1|authorURL) + (concept_div_mean_z|challenge) + feedback_z + sourceshort_z + concept_div_mean_z, data=data.div.conc, family=binomial),method='Wald')
library(lme4)
install.packages(arm)
install.packages("arm")
install.packages("~/Desktop/lme4_1.0-6.tgz", repos = NULL)
library(lme4)
install.packages("ggplot2")
install.packages("influence.ME")
path = "/Users/jchan/Desktop/Dropbox/Research/dissertation/OpenIDEO/Pipeline/Challenge_and_High-level_Data/iPython intermediate inputs and outputs/ConceptLevel_AfterDistanceAndControlsAndDiversity_n456.csv"
data.div456 = read.csv(path,header=TRUE,sep=',')
ggplot(data.div456, aes(insp_div_mean)) + geom_histogram(fill=NA,color="black") + theme_bw()
library(ggplot2)
ggplot(data.div456, aes(insp_div_mean)) + geom_histogram(fill=NA,color="black") + theme_bw()
# scatterplot matrix
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_div_mean,data=data.div456,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
remove(data.div456)
path = "/Users/jchan/Desktop/Dropbox/Research/Dissertation/OpenIDEO/Pipeline/Challenge_and_High-level_Data/iPython intermediate inputs and outputs/ConceptLevel_AfterDistanceAndControls_CORRECTED.csv"
data = read.csv(path,header=TRUE,sep=',')
hist(data$insp_dist_z_insp_mean)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
library(lme4)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_insp_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
fit.fixed = glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
fit.fixed = glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_insp_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
fit.random = glmer(shortlist ~ (1|authorURL) + (insp_dist_z_insp_mean|challenge) + insp_dist_z_insp_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial)
anova(fit.fixed,fit.random)
summary(fit.random)
coef(fit.random)[1]
coef(fit.random)[2]
confint.merMod(fit.fixed)
confint.merMod(fit.fixed,method='Wald')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_raw_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
library(lme4)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_raw_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
data$insp_dist_raw_mean_norm <- scale(data$insp_dist_raw_mean,center=TRUE,scale=TRUE)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_raw_mean_norm + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + both_dist_z_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + both_dist_z_all_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
path = "/Users/jchan/Desktop/Dropbox/Research/Dissertation/OpenIDEO/Pipeline/Challenge_and_High-level_Data/iPython intermediate inputs and outputs/ConceptLevel_AfterDistanceAndControlsAndDiversity.csv"
data.div = read.csv(path,header=TRUE,sep=',')
library(ggplot2)
ggplot(data.div, aes(insp_div_mean)) + geom_histogram(fill=NA,color="black") + theme_bw()
ggplot(data.div, aes(insp_div_mean)) + geom_histogram(fill=NA,color="black",binwidth=.05) + theme_bw()
data.div.insp <- subset(data.div,insp_dist_count > 1)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_div_mean,data=data.div.insp,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
pairs(~shortlist+comments_preshortlist+num_shortlisted_sources+insp_dist_z_insp_mean+insp_div_mean,data=data.div.insp,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
data.div.insp$insp_div_mean_z <- scale(data.div.insp$insp_div_mean,scale=TRUE,center=TRUE)
data.div.insp$feedback_z <- scale(data.div.insp$comments_preshortlist,scale=TRUE,center=TRUE)
data.div.insp$shortSource_z <- scale(data.div.insp$num_shortlisted_sources,scale=TRUE,center=TRUE)
summary(glmer(shortlist ~ (1|challenge) + (1|authorURL) + insp_div_mean_z + feedback_z + shortSource_z, data=data.div.insp, family=binomial))
confint.merMod(glmer(shortlist ~ (1|challenge) + (1|authorURL) + insp_div_mean_z + feedback_z + shortSource_z, data=data.div.insp, family=binomial),method='Wald')
fit.insp.divmean = glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_div_mean + num_shortlisted_sources + comments_preshortlist, data=data.div.insp, family=binomial)
summary(fit.insp.divmean)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + both_div_mean + comments_preshortlist + num_shortlisted_sources, data=data, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + both_div_mean + comments_preshortlist + num_shortlisted_sources, data=data.div, family=binomial))
summary(glm(shortlist ~ both_div_mean + comments_preshortlist + num_shortlisted_sources, data=data.div, family=binomial))
hist(data.div$both_div_mean)
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + both_div_std + comments_preshortlist + num_shortlisted_sources, data=data.div, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + both_div_sd + comments_preshortlist + num_shortlisted_sources, data=data.div, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + both_div_min + comments_preshortlist + num_shortlisted_sources, data=data.div, family=binomial))
fit.div.insp.distmean.divmean = glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_insp_mean + insp_div_mean + num_shortlisted_sources + comments_preshortlist, data=data.div.insp, family=binomial)
summary(fit.div.insp.distmean.divmean)
confint.merMod(fit.div.insp.distmean.divmean,method='Wald')
library(influence.ME)
# not much point, but see if there's an interaction between distance and diversity? (bivariate linear r = ~.3)
fit.div.insp.distmean.divmean.inter = glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_insp_mean + insp_div_mean + insp_dist_z_insp_mean*insp_div_mean + num_shortlisted_sources + comments_preshortlist, data=data.div.insp, family=binomial)
summary(fit.div.insp.distmean.divmean.inter)
confint.merMod(fit.div.insp.distmean.divmean.inter,method='Wald')
fit.div.insp.divmean = glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_div_mean + num_shortlisted_sources + comments_preshortlist, data=data.div.insp, family=binomial)
influence.div.insp.divmean = influence(fit.div.insp.divmean,obs=TRUE)
influence.div.insp.divmean = influence(fit.div.insp.divmean,obs=TRUE)
plot.estex(influence.div.insp.divmean,which='dfbetas',parameters='insp_div_mean')
fit.dist.insp.mean.CC.fixed = glmer(shortlist ~ (1|authorURL) + (1|challenge) + insp_dist_z_insp_mean + num_shortlisted_sources + comments_preshortlist, data=data, family=binomial)
influence.div.insp.divmean = influence(fit.dist.insp.mean.CC.fixed,obs=TRUE)
plot.estex(influence.div.insp.divmean,which='dfbetas',parameters='insp_dist_z_insp_mean')
influence.dive.insp.divmean
influence.div.insp.divmean = influence(fit.dist.insp.mean.CC.fixed,obs=TRUE)
influence.div.insp.divmean
plot.estex(influence.div.insp.divmean,which='dfbetas',parameters='insp_dist_z_insp_mean')
influence.div.insp.divmean$or.fixed
influence.div.insp.divmean$alt.fixed
dfbetas(influence.div.insp.divmean,parameters='insp_dist_z_insp_mean')
hist(dfbetas(influence.div.insp.divmean,parameters='insp_dist_z_insp_mean'))
data.big.challenges <- data[data$challenge == 'food-production-consumption' OR data$challenge == 'vibrant-cities' OR data$challenge == 'bone-marrow' OR data$challenge == 'human-rights']
data.big.challenges <- data[data$challenge == 'food-production-consumption' | data$challenge == 'vibrant-cities' | data$challenge == 'bone-marrow' | data$challenge == 'human-rights']
data.big.challenges <- subset(data, challenge == 'food-production-consumption' | challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights']
data.big.challenges <- subset(data, challenge == 'food-production-consumption' | challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights')
summary(data.big.challenges$challenge)
library(lme4)
summary(glm(shortlist ~ comments_preshortlist + num_shortlisted_sources + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
summary(glm(shortlist ~ comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
summary(glmer(shortlist ~ (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
data.big.challenges <- subset(data, challenge == 'food-production-consumption' | challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights' | challenge == 'web-entrepreneurs')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
data.big.challenges <- subset(data, challenge == 'food-production-consumption' | challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights' | challenge == 'voting')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
data.big.challenges <- subset(data, challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights' | challenge == 'web-entrepreneurs' | challenge == 'voting')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
data.big.challenges <- subset(data, challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights' | challenge == 'web-entrepreneurs' | challenge == 'voting' | challenge == 'social-business')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
data.big.challenges <- subset(data, challenge == 'community-initiative' | challenge == 'bone-marrow' | challenge == 'human-rights' | challenge == 'web-entrepreneurs' | challenge == 'voting' | challenge == 'social-business')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
data.big.challenges <- subset(data, challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights' | challenge == 'web-entrepreneurs' | challenge == 'voting')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
data.big.challenges <- subset(data, challenge == 'vibrant-cities' | challenge == 'bone-marrow' | challenge == 'human-rights' | challenge == 'voting')
summary(glmer(shortlist ~ (1|authorURL) + (1|challenge) + comments_preshortlist + insp_dist_z_insp_mean, data=data.big.challenges, family=binomial))
fit.dist.insp.mean.CC.rand = glmer(shortlist ~ (1|authorURL) + (insp_dist_z_insp_mean|challenge) + comments_preshortlist + num_shortlisted_sources + insp_dist_z_insp_mean, data=data, family-binomial)
fit.dist.insp.mean.CC.rand = glmer(shortlist ~ (1|authorURL) + (insp_dist_z_insp_mean|challenge) + comments_preshortlist + num_shortlisted_sources + insp_dist_z_insp_mean, data=data, family=binomial)
coef(fit.dist.insp.mean.CC.rand)[2]
influence.div.insp.divmean = influence(fit.div.insp.divmean,obs=TRUE)
library(influence.ME)
influence.div.insp.divmean = influence(fit.div.insp.divmean,obs=TRUE)
data$shortlist.cat <- ifelse(data$shortlist == 1,'Yes','No')
library(ggplot2)
ggplot(data=data, aes(insp_div_mean)) + geom_boxplot() + theme_bw()
ggplot(data=data.div, aes(insp_div_mean)) + geom_boxplot() + theme_bw()
boxplot.divmean <- ggplot(data=data.div, aes(factor(shortlist.cat),insp_div_mean))
boxplot.divmean + geom_boxplot()
data.div$shortlist.cat <- ifelse(data.div$shortlist == 1,"Yes","No")
boxplot.divmean <- ggplot(data=data.div, aes(factor(shortlist.cat),insp_div_mean))
boxplot.divmean + geom_boxplot()
boxplot.divmean + geom_boxplot() + theme_bw()
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4)
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position_jitter(width=.3))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.3))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + theme(xlab("Shortlisted?"),ylab("Mean source pairwise distance"))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance"))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance")
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20), axis.title.y = element_text(face="bold", size=20), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=.5), axis.title.y = element_text(face="bold", size=20), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=-.5), axis.title.y = element_text(face="bold", size=20), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=-.5), axis.title.y = element_text(face="bold", size=20, hjust=-.5), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=-.5), axis.title.y = element_text(face="bold", size=20, hjust=.5), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=-.5), axis.title.y = element_text(face="bold", size=20, hjust=-.75), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=-.5), axis.title.y = element_text(face="bold", size=20, vjust=-.75), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=-.5), axis.title.y = element_text(face="bold", size=20, hjust=-.1), axis.text.x = element_text(size=15), axis.text.y = element_text(size=15))
boxplot.divmean + geom_boxplot() + theme_bw() + geom_jitter(alpha=1/4,position=position_jitter(width=.1)) + xlab("Shortlisted?") + ylab("Mean source pairwise distance") + theme(axis.title.x = element_text(face="bold", size=20, vjust=-.5), axis.title.y = element_text(face="bold", size=20, hjust=-.1), axis.text.x = element_text(size=12), axis.text.y = element_text(size=12))
pairs(~shortlist+insp_div_mean+insp_div_sd,data=data.div.insp,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
print(summary(fit.div.insp.divmean))
pairs(~shortlist+insp_div_min+insp_div_max+insp_div_mean+insp_div_sd,data=data.div.insp,
panel=function(x,y){
points(x,y)
abline(lm(y~x),lty=2)
lines(lowess(x,y))
},
diag.panel=function(x){
par(new=T)
hist(x,main="",axes=F)
}
)
